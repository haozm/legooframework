<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    <sec:http pattern="/login.html*" security="none"/>
    <sec:http pattern="/api/broker/chat*" security="none"/>
    <sec:http pattern="/api/broker/monitor*" security="none"/>
    <sec:http authentication-manager-ref="legooProviderManager" request-matcher="ant"
              entry-point-ref="legooAuthenticationEntryPoint"
              security-context-repository-ref="legooSecurityContextRepository">
        <sec:intercept-url pattern="/api/mb/non-sec/**" access="isAnonymous()"/>
        <sec:intercept-url pattern="/api/online/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/customer/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/dict/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/group/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/addressbook/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/wechat/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/label/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/remarks/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/equ/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/webocx/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/im/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/monitor/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/device/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/speech/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/org/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/store/**" access="hasRole('LOGINER')"/>
        <sec:intercept-url pattern="/api/sec/**" access="hasRole('LOGINER')"/>
        <sec:form-login login-page="/login.html"
                        login-processing-url="/api/login"
                        authentication-success-handler-ref="legooAuthenticationHandler"
                        authentication-failure-handler-ref="legooAuthenticationHandler"/>
        <sec:access-denied-handler error-page="/login.html?denied"/>
        <sec:logout delete-cookies="jsessionid" logout-url="/api/logout" invalidate-session="true"
                    success-handler-ref="legooLogoutSuccessHandler"/>
        <sec:csrf disabled="true"/>
    </sec:http>
    <bean id="legooAuthenticationEntryPoint"
          class="com.legooframework.model.webwork.service.LegooAuthenticationEntryPoint">
        <constructor-arg name="loginFormUrl" value="/login.html"/>
    </bean>
    <bean id="legooAuthenticationHandler"
          class="com.legooframework.model.webwork.service.LegooAuthenticationHandler"/>
    <bean id="springSecurityMessagePathMatcher" class="org.springframework.util.AntPathMatcher"/>
    <bean id="legooProviderManager" class="org.springframework.security.authentication.ProviderManager">
        <constructor-arg name="providers" ref="authenticationProviders"/>
        <property name="authenticationEventPublisher" ref="authenticationEventPublisher"/>
    </bean>
    <bean id="authenticationEventPublisher"
          class="org.springframework.security.authentication.DefaultAuthenticationEventPublisher"/>
    <bean id="daoAuthenticationProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="legooSecurityContextRepository"/>
    </bean>
    <bean id="legooSecurityContextRepository"
          class="com.legooframework.model.webwork.service.LegooSecurityContextRepository"/>
    <bean id="legooLogoutSuccessHandler" class="com.legooframework.model.webwork.service.LegooLogoutSuccessHandler">
        <property name="securityContextRepository" ref="legooSecurityContextRepository"/>
        <property name="defaultTargetUrl" value="/login.html?logout"/>
    </bean>
    <util:list id="authenticationProviders"
               value-type="org.springframework.security.authentication.AuthenticationProvider">
        <ref bean="daoAuthenticationProvider"/>
    </util:list>
</beans>
