<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
                           http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
                           http://www.springframework.org/schema/integration/jdbc https://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd">
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <qualifier value="transactionManager"/>
    </bean>
    <alias name="dataSource" alias="smsResultDataSource"/>
    <alias name="dataSource" alias="smsProviderDataSource"/>

    <import resource="classpath:META-INF/core/spring-model-cfg.xml"/>
    <import resource="classpath:META-INF/entities/spring-model-cfg.xml"/>
    <import resource="classpath:META-INF/smsprovider/spring-model-cfg.xml"/>
    <import resource="classpath:META-INF/smsresult/spring-model-cfg.xml"/>

    <task:executor id="sms-smsresult-executor" pool-size="4-32" queue-capacity="64" rejection-policy="CALLER_RUNS"/>
    <task:scheduler id="smsresult-scheduler" pool-size="4"/>
    <task:scheduled-tasks scheduler="smsresult-scheduler">
        <task:scheduled ref="smsResultService" method="replay" cron="0 0/30 * * * ?"/>
    </task:scheduled-tasks>
    <!-- ================== SMS SENDING CHANNEL ================== -->
    <int:publish-subscribe-channel id="channel_sms_splitter"/>
    <int:logging-channel-adapter id="channel_logger" level="DEBUG"/>
    <int:channel id="channel_sms_gateway">
        <int:queue/>
        <int:interceptors>
            <int:wire-tap channel="channel_logger"/>
        </int:interceptors>
    </int:channel>
    <int:publish-subscribe-channel id="channel_sms_result"/>
    <int-jdbc:inbound-channel-adapter channel="channel_sms_splitter"
                                      data-source="smsResultDataSource"
                                      auto-startup="true"
                                      update="UPDATE SMS_SENDING_LOG SET final_state = 99 WHERE id IN ( :id )">
        <int-jdbc:query><![CDATA[
    SELECT id AS 'id', company_id AS 'companyId',sms_ext AS 'smsExt',sms_channel AS 'smsChannle',phone_no AS 'phoneNo',
           sms_context AS 'smsContext'
      FROM SMS_SENDING_LOG
     WHERE final_state = 0
  ORDER BY createTime LIMIT 1024
        ]]></int-jdbc:query>
        <int:poller fixed-delay="1000" time-unit="MILLISECONDS"/>
    </int-jdbc:inbound-channel-adapter>
    <int:splitter input-channel="channel_sms_splitter" output-channel="channel_sms_gateway"/>
    <int:outbound-channel-adapter ref="smsResultService" method="sending" auto-startup="true"
                                  channel="channel_sms_gateway">
        <int:poller max-messages-per-poll="256" fixed-rate="500" receive-timeout="5000"
                    task-executor="sms-smsresult-executor"/>
    </int:outbound-channel-adapter>
    <int-jdbc:outbound-gateway request-channel="channel_sms_result" requires-reply="false" reply-channel="nullChannel"
                               data-source="smsResultDataSource">
        <int-jdbc:update><![CDATA[
    UPDATE SMS_SENDING_LOG
       SET final_state = :payload[finalState], send_msg_id = :payload[sendMsgId], send_date = :payload[sendDate],
           remarks = :payload[remarks], sms_account = :payload[account]
     WHERE id = :payload[id]
        ]]></int-jdbc:update>
    </int-jdbc:outbound-gateway>

    <!-- ================== SMS SYNC STATUS ================== -->
    <int:publish-subscribe-channel id="channel_sync_source"/>
    <int-jdbc:inbound-channel-adapter channel="channel_sync_source" data-source="smsResultDataSource"
                                      auto-startup="true">
        <int-jdbc:query>
            <![CDATA[
       SELECT id AS 'id',sms_ext AS 'smsExt',sms_channel AS 'smsChannle',phone_no AS 'phoneNo', send_date AS 'sendDate',
              sms_account AS 'account'
         FROM SMS_SENDING_LOG
        WHERE final_state = 98
          AND TIMESTAMPDIFF(HOUR,send_date,NOW()) <= 6
          AND TIMESTAMPDIFF(MINUTE,send_date,NOW()) >= 10
     ORDER BY createTime
        LIMIT 4096
            ]]>
        </int-jdbc:query>
        <int:poller fixed-delay="600" time-unit="SECONDS"/>
    </int-jdbc:inbound-channel-adapter>
    <int:splitter input-channel="channel_sync_source" output-channel="channel_sync_state"/>
    <int:channel id="channel_sync_state">
        <int:queue/>
        <int:interceptors>
            <int:wire-tap channel="channel_logger"/>
        </int:interceptors>
    </int:channel>
    <int:outbound-channel-adapter channel="channel_sync_state" ref="smsResultService" method="syncState"
                                  auto-startup="true">
        <int:poller max-messages-per-poll="512" fixed-delay="10" time-unit="SECONDS"/>
    </int:outbound-channel-adapter>

    <beans profile="devp">
        <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/smsgateway"/>
    </beans>
    <beans profile="test">
        <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/smsgateway"/>
    </beans>
</beans>
