<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    <bean id="smsResultBundle" class="com.legooframework.model.core.osgi.LegooBundleFactoryBean">
        <property name="resource" value="classpath:META-INF/smsresult/legoo-model-cfg.xml"/>
    </bean>
    <!-- ========================= Query SQL Factory ========================= -->
    <bean id="smsResultStatementFactory" class="com.legooframework.model.core.jdbc.sqlengine.SQLStatementFactoryBean">
        <property name="patterns">
            <util:list value-type="java.lang.String">
                <value>.*[\\,/]smsresult[\\,/].*-sql-cfg.xml$</value>
                <value>.*[\\,/]core[\\,/].*-sql-cfg.xml$</value>
            </util:list>
        </property>
    </bean>
    <bean id="smsResultCacheManager" class="com.legooframework.model.core.cache.CaffeineCacheManager">
        <property name="caffeineSpecs">
            <util:map key-type="java.lang.String" value-type="java.lang.String">
                <entry key="smsResultCache" value="initialCapacity=8,maximumSize=256,expireAfterAccess=8h"/>
            </util:map>
        </property>
    </bean>
    <bean id="smsResultEntityAction" class="com.legooframework.model.core.base.entity.BaseEntityAction"
          abstract="true">
        <property name="statementFactory" ref="smsResultStatementFactory"/>
        <property name="dataSource" ref="smsResultDataSource"/>
    </bean>
    <bean id="smsGatewaySendEntityAction"
          class="com.legooframework.model.smsresult.entity.SMSSendAndReceiveEntityAction"
          parent="smsResultEntityAction"/>
    <bean id="smsBlackListEntityAction" class="com.legooframework.model.smsresult.entity.SMSBlackListEntityAction"
          parent="smsResultEntityAction"/>
    <bean id="smsReplayEntityAction" class="com.legooframework.model.smsresult.entity.SMSReplayEntityAction"
          parent="smsResultEntityAction"/>

    <bean id="smsSendAndReceiveService" class="com.legooframework.model.smsresult.service.SMSSendAndReceiveService"/>
    <bean id="smsReplayedService" class="com.legooframework.model.smsresult.service.SMSReplayedService"/>
    <bean id="smsRltMessagingTemplate" class="org.springframework.integration.core.MessagingTemplate"/>


    <!-- ================== SMS RESULAT ================== -->
    <!--
    <int:publish-subscribe-channel id="result_splitter_channel"/>
    <int-jdbc:inbound-channel-adapter
            query="SELECT id AS 'id',sms_ext AS 'smsExt',sms_channel AS 'smsChannle',phone_no AS 'phoneNo', send_date AS 'sendDate' FROM SMS_SENDING_LOG WHERE final_state = 98 AND send_date > DATE_SUB( NOW(), INTERVAL 12 HOUR ) ORDER BY createTime LIMIT 3000"
            channel="result_splitter_channel"
            data-source="smsResultDataSource"
            auto-startup="true">
        <int:poller fixed-delay="30000" task-executor="sms-service-executor" time-unit="MILLISECONDS"/>
    </int-jdbc:inbound-channel-adapter>
    <int:splitter input-channel="result_splitter_channel" output-channel="channel_sync_state"/>
    <int:channel id="channel_sync_state">
        <int:queue/>
    </int:channel>
    <int:outbound-channel-adapter channel="channel_sync_state" ref="smsSendAndReceiveService"
                                  method="syncFromSmsGateWay">
        <int:poller max-messages-per-poll="100" fixed-rate="1000" receive-timeout="5000"
                    task-executor="sms-service-executor"/>
    </int:outbound-channel-adapter>
    <int:publish-subscribe-channel id="result_result_channel"/>
    <int-jdbc:outbound-gateway
            update="UPDATE SMS_SENDING_LOG SET final_state = :payload[finalState], final_state_date = :payload[finalStateDate], final_state_desc = :payload[finalStateDesc] WHERE phone_no = :payload[phoneNo] AND send_msg_id = :payload[sendMsgId] AND final_state = 98"
            request-channel="result_result_channel"
            auto-startup="true" requires-reply="false" reply-channel="nullChannel"
            data-source="smsResultDataSource"/> -->
</beans>
