<?xml version="1.0" encoding="UTF-8"?>
<sqls>
    <model id="SMSResultEntity">
        <sql id="load4SyncState">
            <body><![CDATA[
       SELECT id AS 'id',sms_ext AS 'smsExt',sms_channel AS 'smsChannle',phone_no AS 'phoneNo', send_date AS 'sendDate', sms_account AS 'account'
         FROM SMS_SENDING_LOG
        WHERE send_state = 1
          AND TIMESTAMPDIFF(HOUR,send_date,NOW()) BETWEEN :start AND :end
            ]]></body>
        </sql>
        <sql id="query4list" macros="crud_fixed">
            <body><![CDATA[
          SELECT sslt.id AS 'id',
                 sslt.phone_no AS 'mobileNo',
                 sslt.store_id AS 'storeId',
                 sslt.company_id AS 'companyId',
                 sslt.sms_channel AS 'smsChannel',
                 sslt.sms_account AS 'sms_account',
                 sslt.send_state AS 'sendState',
                 sslt.send_date AS 'sendDate',
                 sslt.send_msg_id AS 'sendMsgId',
                 sslt.send_remarks AS 'sendRemark',
                 sslt.sms_channel AS 'smsChannle',
                 sslt.sms_ext AS 'smsExt',
                 sslt.final_state AS 'finalState',
                 sslt.final_date AS 'finalDate',
                 sslt.final_desc AS 'finalDesc',
                 sslt.phone_no AS 'phoneNo',
                 sslt.sms_count AS 'smsCount',
                 sslt.word_count AS 'wordCount',
                 sslt.sms_context AS 'smsContext',
                 <@crud_fixed_select "sslt" />
            FROM SMS_SENDING_LOG AS sslt
        <#if (sql=="loadByIds")>
           WHERE sslt.id IN ( ${smsIds?join(",")} )
        </#if>
            ]]></body>
        </sql>
    </model>
    <model id="SMSReplyEntity">
        <sql id="batchInsert">
            <body><![CDATA[
        INSERT INTO SMS_REPLAY_LOG
                    (phone_no, sms_ext, send_msg_id, sms_context, sms_replay_date,sms_account)
             VALUES (       ?,       ?,           ?,           ?,                ?,         ?)
            ]]></body>
        </sql>
        <sql id="load4TDEntities" macros="crud_fixed">
            <body><![CDATA[
         SELECT srl.phone_no AS 'mobile',
                sslt.company_id AS 'companyId',
                sslt.store_id AS 'storeId'
           FROM SMS_REPLAY_LOG AS srl
      LEFT JOIN SMS_SENDING_LOG sslt ON sslt.send_msg_id = srl.send_msg_id
          WHERE srl.createTime BETWEEN :start AND :end
            AND srl.sms_context REGEXP 'TD|T|é€€'
          UNION
         SELECT sslt.phone_no AS 'mobile',
                sslt.company_id AS 'companyId',
                sslt.store_id AS 'storeId'
           FROM SMS_SENDING_LOG AS sslt
          WHERE sslt.final_state = 4
            AND sslt.final_state_date BETWEEN :start AND :end
            ]]></body>
        </sql>
    </model>
    <model id="SMSBlackListEntity">
        <sql id="batchReplace">
            <body><![CDATA[
       REPLACE INTO SMS_ALL_BLACKLIST
                    (company_id, store_id, phone_no, send_msg_id, sms_context,  sms_replay_date)
             VALUES (         ?,        ?,        ?,           ?,            ?,               ?)
            ]]></body>
        </sql>
        <sql id="loadByInterval" dynamic="true">
            <body><![CDATA[
      SELECT company_id AS 'companyId', store_id AS 'storeId', phone_no AS 'mobile', send_msg_id AS 'sendMsgId',
             sms_context AS 'content', sms_replay_date AS 'replayDate', '' AS 'id'
        FROM SMS_ALL_BLACKLIST
       WHERE editTime BETWEEN :date_start AND :date_end
         AND company_id IN (${companyIds?join(",")})
            ]]></body>
        </sql>
    </model>
</sqls>
