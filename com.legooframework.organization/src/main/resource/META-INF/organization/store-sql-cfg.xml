<?xml version="1.0" encoding="UTF-8"?>
<sqls>
    <macros>
        <macro id="macro_4_equipment">
            <![CDATA[
		        <#macro equipment_select_fields alias hasnext>
	               ${alias}.id AS 'equipmentId',
	               ${alias}.device_type AS 'deviceType',
	               ${alias}.activate_date AS 'activateDate',
                 ${alias}.device_enbaled AS 'deviceEnabled',
	               ( SELECT st.field_name
                       FROM dict_kv_data st
                      WHERE st.field_value = ${alias}.device_type
                        AND st.dict_type = ${alias}.device_type_dict ) AS 'deviceTypeName',
                   ${alias}.remark AS 'deviceRemark',
                   ${alias}.company_id AS 'companyId',
                   (SELECT CONCAT(obi.id ,'[@@]',obi.full_name)
                      FROM org_base_info obi ,org_store_info osi
                     WHERE obi.id = osi.id
                       AND osi.store_status
                       AND osi.id IN (
                                      SELECT osmd.store_id
                                        FROM org_store_map_device osmd
                                       WHERE osmd.effective_flag =1
                                         AND osmd.tenant_id = ${alias}.tenant_id
                                         AND osmd.delete_flag = 0
                                         AND osmd.device_id = ${alias}.id
                                      )
                   ) AS 'storeInfo' <#if hasnext>, </#if>
	            </#macro>
	         ]]>
        </macro>
    </macros>
    <model id="EquipmentEntity">
        <sql id="insert">
            <body><![CDATA[
             INSERT INTO csosm_main.org_device_info
                         (id, device_enbaled, device_type, device_type_dict, remark, activate_date,
                           company_id, delete_flag, tenant_id, creator, createTime)
                  VALUES (:id, 1,             :deviceType, 'DEVICETYPE',    :remark, NOW(),
                          :companyId,  0,         :companyId,-1,NOW())
            ]]></body>
        </sql>
        <sql id="findById" macros="crud_fixed,device_fixed,macro_4_equipment">
            <body><![CDATA[
             SELECT <@equipment_select_fields alias="odi" hasnext=true/>
                    <@crud_fixed_select alias="odi" />,
                    <@device_4_dto alias="dbi"/>
               FROM org_device_info odi
          LEFT JOIN device_base_info dbi ON odi.id = dbi.imei
              WHERE odi.delete_flag = 0
                AND odi.id = :id
            ]]></body>
        </sql>
        <sql id="enabled">
            <body><![CDATA[
            UPDATE org_device_info
               SET device_enabled = 1, editor = :LOGIN_ID ,editTime = NOW()
             WHERE delete_flag = 0
               AND id = :id
            ]]></body>
        </sql>
        <sql id="disabled">
            <body><![CDATA[
            UPDATE org_device_info
               SET device_enabled = 0, editor = :LOGIN_ID ,editTime = NOW()
             WHERE delete_flag = 0
               AND id = :id
            ]]></body>
        </sql>
        <sql id="activate">
            <body><![CDATA[
            UPDATE org_device_info
               SET activate_date = NOW()
             WHERE delete_flag = 0
               AND id = :id
            ]]></body>
        </sql>
        <sql id="loadAllByLoginUser" macros="crud_fixed,device_fixed,macro_4_equipment">
            <body><![CDATA[
             SELECT <@equipment_select_fields alias="odi" hasnext=true/>
                    <@crud_fixed_select alias="odi" />,
                    <@device_4_dto alias="dbi"/>
               FROM org_device_info odi
          LEFT JOIN device_base_info dbi ON odi.id = dbi.imei
              WHERE odi.delete_flag = 0
                AND odi.tenant_id = :TENANT_ID
                AND odi.id IN (
                    SELECT osmd.device_id
                      FROM org_store_map_device osmd
                     WHERE osmd.effective_flag = 1
                       AND osmd.tenant_id = odi.tenant_id
                       AND osmd.store_id IN ( ${STORE_IDS?join(", ")} )
                )
            ]]></body>
        </sql>
        <sql id="loadAllByStore" macros="crud_fixed,device_fixed,macro_4_equipment">
            <body><![CDATA[
             SELECT <@equipment_select_fields alias="odi" hasnext=true/>
                    <@crud_fixed_select alias="odi" />,
                    <@device_4_dto alias="dbi"/>
               FROM org_device_info odi
          LEFT JOIN device_base_info dbi ON odi.id = dbi.imei
              WHERE odi.delete_flag = 0
                AND odi.tenant_id = :TENANT_ID
                AND odi.id IN (
                    SELECT osmd.device_id
                      FROM org_store_map_device osmd
                     WHERE osmd.effective_flag = 1
                       AND osmd.tenant_id = odi.tenant_id
                       AND osmd.store_id = :storeId
                )
            ]]></body>
        </sql>
        <sql id="loadAllByCompany" macros="crud_fixed,device_fixed,macro_4_equipment">
            <body><![CDATA[
             SELECT <@equipment_select_fields alias="odi" hasnext=true/>
                    <@crud_fixed_select alias="odi" />,
                    <@device_4_dto alias="dbi"/>
               FROM org_device_info odi
          LEFT JOIN device_base_info dbi ON odi.id = dbi.imei
              WHERE odi.delete_flag = 0
                AND odi.tenant_id = :companyId
            ]]></body>
        </sql>
    </model>
    <model id="StoreWithWeChatEntity">
        <sql id="loadAllByStore" macros="crud_fixed">
            <body><![CDATA[
             SELECT osmw.id AS 'id', osmw.store_id AS 'storeId', osmw.wechat_id AS 'wechatId',
                    osmw.webchat_use AS 'wechatType', osmw.effective_flag AS 'effectiveFlag',
                    <@crud_fixed_select alias="osmw" />
               FROM org_store_map_wechat osmw
              WHERE osmw.effective_flag = 1
                AND osmw.store_id = :storeId
            ]]></body>
        </sql>
        <sql id="loadAllByCompany" macros="crud_fixed">
            <body><![CDATA[
             SELECT osmw.id AS 'id', osmw.store_id AS 'storeId', osmw.wechat_id AS 'wechatId',
                    osmw.webchat_use AS 'wechatType', osmw.effective_flag AS 'effectiveFlag',
                    <@crud_fixed_select alias="osmw" />
               FROM org_store_map_wechat osmw
              WHERE osmw.effective_flag = 1
                AND osmw.store_id IN (
                    SELECT obi.id
                      FROM org_base_info obi
                     WHERE obi.org_type = 1
                       AND obi.tenant_id = :companyId
                )
            ]]></body>
        </sql>
        <sql id="insert">
            <body><![CDATA[
            INSERT INTO org_store_map_wechat
                        (store_id, wechat_id, webchat_use, effective_flag, delete_flag, tenant_id, creator, createTime)
                 VALUES (:storeId, :wechatId, :wechatType, :effective, 0, :tenantId, :creator, NOW())
            ]]></body>
        </sql>
    </model>
    <model id="StoreWithEmployeeEntity">
        <sql id="loadAllByStore" macros="crud_fixed">
            <body><![CDATA[
             SELECT osme.id AS 'id', osme.store_id AS 'storeId', osmw.employee_id AS 'employeeId',
                    osme.effective_flag AS 'effectiveFlag',
                    <@crud_fixed_select alias="osme" />
               FROM org_store_map_employee osme
              WHERE osme.effective_flag = 1
                AND osme.store_id = :storeId
            ]]></body>
        </sql>
        <sql id="insert">
            <body><![CDATA[
            INSERT INTO org_store_map_wechat
                        (store_id, wechat_id, webchat_use, effective_flag, delete_flag, tenant_id, creator, createTime)
                 VALUES (:storeId, :wechatId, :wechatType, :effective, 0, :tenantId, :creator, NOW())
            ]]></body>
        </sql>
    </model>
    <model id="StoreTreeEntity">
        <sql id="loadAll" macros="crud_fixed">
            <body><![CDATA[
             SELECT ost.id AS 'id',
                    ost.parentId AS 'pId',
                    ost.node_name AS 'nodeName',
                    ost.node_type AS 'nodeType',
                    ost.node_seq AS 'nodeSeq',
                    ost.children AS 'children',
                    <@crud_fixed_select alias="ost" />
               FROM csosm_chat.org_store_tree AS ost
              WHERE ost.delete_flag = 0
                AND ost.tree_type = 0
                AND ost.tenant_id = :tenantId
           ORDER BY ost.parentId,ost.node_seq
            ]]></body>
        </sql>
        <sql id="exits" macros="crud_fixed">
            <body><![CDATA[
             SELECT ost.id AS 'id',
                    ost.parentId AS 'pId',
                    ost.node_name AS 'nodeName',
                    ost.node_type AS 'nodeType',
                    ost.node_seq AS 'nodeSeq',
                    ost.children AS 'children',
                    <@crud_fixed_select alias="ost" />
               FROM csosm_chat.org_store_tree AS ost
              WHERE ost.delete_flag = 0
                AND ost.tree_type = 0
                AND ost.tenant_id = :tenantId
                AND ost.node_name = :nodeName
                AND ost.parentId = :pId
            ]]></body>
        </sql>
        <sql id="insert">
            <body><![CDATA[
        INSERT INTO org_store_tree
                    (id, parentId, node_name, node_seq, node_type, tree_type,
                     children, node_desc, delete_flag, tenant_id, creator, createTime)
             VALUES (:id, :pId, :nodeName, :nodeSeq, 0, 0,
                     null, null, 0, :tenantId, :LOGIN_ID, NOW())
            ]]></body>
        </sql>
        <sql id="change">
            <body><![CDATA[
             UPDATE org_store_tree
                SET node_name = :nodeName, node_seq = :nodeSeq, editor = :LOGIN_ID, editTime = NOW()
              WHERE id = :id
                AND delete_flag = 0
                AND tenant_id = :TENANT_ID
            ]]></body>
        </sql>
        <sql id="update_stores">
            <body><![CDATA[
             UPDATE org_store_tree
                SET children = :children, editor = :LOGIN_ID, editTime = NOW()
              WHERE id = :id
                AND delete_flag = 0
                AND tenant_id = :TENANT_ID
            ]]></body>
        </sql>
        <sql id="remove" macros="crud_fixed">
            <body><![CDATA[
             <@crud_fixed_deleteById tableName="org_store_tree" />
            ]]></body>
        </sql>
    </model>
    <model id="StorePermissionEntity">
        <sql id="findByEmployeeId" macros="crud_fixed">
            <body><![CDATA[
        SELECT osp.id AS 'id', osp.employee_id AS 'employeeId', osp.org_ids AS 'orgIds',
               osp.store_ids AS 'storeIds', <@crud_fixed_select alias="osp" />
          FROM csosm_chat.org_store_permission osp
         WHERE osp.employee_id = :employeeId
           AND osp.delete_flag = 0
           AND osp.tenant_id = :TENANT_ID
            ]]></body>
        </sql>
        <sql id="insert">
            <body><![CDATA[
        INSERT INTO org_store_permission
                    (id, employee_id, org_ids, store_ids, delete_flag, tenant_id, creator, createTime)
             VALUES (:id, :employeeId, :orgIds, :storeIds, 0, :TENANT_ID, :LOGIN_ID, NOW() )
            ]]></body>
        </sql>
        <sql id="changePermission">
            <body><![CDATA[
        UPDATE org_store_permission
           SET org_ids = :orgIds,store_ids = :storeIds, editor = :LOGIN_ID ,editTime = NOW()
         WHERE employee_id = :employeeId
            ]]></body>
        </sql>
        <sql id="deleteByEmployeeId">
            <body><![CDATA[
        DELETE FROM org_store_permission
              WHERE employee_id = :employeeId
            ]]></body>
        </sql>
    </model>
</sqls>
