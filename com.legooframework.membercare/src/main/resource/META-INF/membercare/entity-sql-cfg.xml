<?xml version="1.0" encoding="UTF-8"?>
<sqls>
    <macros>
        <macro id="job_upcomingtask_fields">
            <![CDATA[
             <#macro upcomingtask_fields>
                   trm.id as 'id',
                   trm.task_type AS 'taskType',
                   trm.automatic AS 'automatic',
                   trm.cross_store AS 'crossed',
                   trm.member_id AS 'memberId',
                   trm.store_id AS 'storeId',
                   trm.company_id AS 'companyId',
                   trm.source_id AS 'sourceId',
                   trm.service_userid AS 'serviceUserId',
                   trm.merge_info AS 'mergeInfo',
                   trm.delete_flag AS 'deleteFlag',
                   trm.tenant_id AS 'tenantId',
                   trm.creator AS 'creator',
                   trm.createTime AS 'createTime',
                   trm.editor AS 'editor',
                   trm.editTime AS 'editTime',
                   (   SELECT GROUP_CONCAT(CONCAT_WS(',',CONCAT('id=',trmd.id),
                                                         CONCAT('su=',trmd.task_status),
                                                         CONCAT('ti=',trmd.task_id),
                                                         CONCAT('ix=',trmd.step_index),
                                                         CONCAT('sd=',DATE_FORMAT(trmd.start_date, '%Y-%m-%d %H:%i:%s')),
                                                         CONCAT('ed=',DATE_FORMAT(trmd.expired_date, '%Y-%m-%d %H:%i:%s')),
                                                         CONCAT('fd=',DATE_FORMAT(trmd.finished_date, '%Y-%m-%d %H:%i:%s'))
                                                         )
                                   ORDER BY trmd.start_date
                                  SEPARATOR '$')
                         FROM TASK_RUN_MONITOR_DETAIL AS trmd
                        WHERE trm.id = trmd.task_id
                     GROUP BY trmd.task_id) AS 'details'
	         </#macro>
	         <#macro upcomingtask_detail_fields>
                   trmd.id AS 'id',
	               trmd.task_status AS 'taskStatus',
	               trmd.task_id AS 'taskId',
	               trmd.step_index AS 'stepIndex',
	               DATE_FORMAT(trmd.start_date, '%Y-%m-%d %H:%i:%s') AS 'startDate',
	               DATE_FORMAT(trmd.expired_date, '%Y-%m-%d %H:%i:%s') AS 'expiredDate',
	               DATE_FORMAT(trmd.finished_date, '%Y-%m-%d %H:%i:%s') AS 'finishedDate'
	         </#macro>
	          ]]>
        </macro>
    </macros>
    <model id="UpcomingTaskEntity">
        <sql id="findById" macros="job_upcomingtask_fields">
            <body><![CDATA[
            SELECT <@upcomingtask_fields />
              FROM TASK_RUN_MONITOR AS trm
             WHERE trm.id = :id
            ]]></body>
        </sql>
        <sql id="loadDetailByStatus" dynamic="true" macros="job_upcomingtask_fields">
            <body><![CDATA[
            SELECT <@upcomingtask_detail_fields />
              FROM TASK_RUN_MONITOR_DETAIL AS trmd
         LEFT JOIN TASK_RUN_MONITOR AS trm ON trmd.task_id = trm.id
             WHERE trm.task_type = :taskType
         <#if (taskStatus == 1)>
               AND trmd.task_status = :taskStatus
               AND DATE(DATE_ADD(trmd.start_date, INTERVAL 14 HOUR)) = current_date
         <#elseif (taskStatus == 2)>
               AND trmd.task_status = :taskStatus
               AND DATE(DATE_ADD(trmd.expired_date, INTERVAL 14 HOUR)) = DATE_ADD(current_date, INTERVAL -1 DAY)
         <#else>
                AND trmd.task_status = :taskStatus
         </#if>
            ]]></body>
        </sql>
        <sql id="updateDetailToStart">
            <body><![CDATA[
            UPDATE TASK_RUN_MONITOR_DETAIL
               SET task_status = 2, editTime=CURRENT_TIMESTAMP
             WHERE task_status = 1
               AND id = ?
            ]]></body>
        </sql>
        <sql id="updateDetailToExpired">
            <body><![CDATA[
            UPDATE TASK_RUN_MONITOR_DETAIL
               SET task_status = 6, editTime=CURRENT_TIMESTAMP
             WHERE task_status = 2
               AND id = ?
            ]]></body>
        </sql>
        <sql id="loadDetailByTaskId" macros="job_upcomingtask_fields">
            <body><![CDATA[
            SELECT <@upcomingtask_detail_fields />
              FROM TASK_RUN_MONITOR_DETAIL AS trmd
             WHERE trmd.task_id = :taskId
          ORDER BY trmd.start_date
            ]]></body>
        </sql>
        <sql id="loadByStore" macros="job_upcomingtask_fields">
            <body><![CDATA[
            SELECT <@upcomingtask_fields />
              FROM TASK_RUN_MONITOR AS trm
             WHERE trm.store_id = :storeId
               AND trm.company_id = :companyId
            ]]></body>
        </sql>
        <sql id="loadEnabledTouch90" macros="job_upcomingtask_fields">
            <body><![CDATA[
            SELECT <@upcomingtask_fields />
              FROM TASK_RUN_MONITOR AS trm
             WHERE trm.task_type = 90
               AND trm.id IN ( SELECT DISTINCT detail.task_id
                            FROM TASK_RUN_MONITOR_DETAIL detail
                           WHERE detail.task_status IN (1,2) )
               AND trm.company_id = :companyId
            <#if storeIds??>
              AND trm.store_id IN (${storeIds?join(",")})
            </#if>
         ORDER BY trm.company_id,trm.store_id,trm.member_id DESC
            ]]></body>
        </sql>
        <sql id="batchInsert">
            <body><![CDATA[
        INSERT INTO TASK_RUN_MONITOR
                    (id, task_type,  automatic, cross_store, member_id,
                     store_id, company_id, source_id, merge_info, service_userid,tenant_id, creator,createTime)
             VALUES ( ?,         ?,          ?,           ?,         ?,
                            ?,          ?,          ?,         ?,              ?,        ?,     -1, NOW())
            ]]></body>
        </sql>
        <sql id="batchUpdate">
            <body><![CDATA[
         UPDATE TASK_RUN_MONITOR
            SET merge_info = ? , editTime = NOW()
          WHERE id = ?
            ]]></body>
        </sql>
        <sql id="saveOrUpdateDetail">
            <body><![CDATA[
       REPLACE INTO TASK_RUN_MONITOR_DETAIL
                    (id, task_id, task_status, start_date, expired_date, step_index, createTime,tenant_id, creator )
             VALUES ( ?,       ?,           ?,          ?,            ?,           ?,         ?,  1000000, -1 )
            ]]></body>
        </sql>
    </model>
    <macros>
        <macro id="job_90log_fields">
            <![CDATA[
             <#macro touch90_fields>
                   attl.company_id AS 'companyId',
                   attl.store_id AS 'storeId',
                   attl.log_date AS 'logDate',
                   attl.add_list AS 'addList',
                   attl.update_list AS 'updateList',
                   attl.delete_flag AS 'deleteFlag',
                   attl.tenant_id AS 'tenantId',
                   attl.creator AS 'creator',
                   attl.createTime AS 'createTime',
                   attl.editor AS 'editor',
                   attl.editTime AS 'editTime'
	         </#macro>
	          ]]>
        </macro>
    </macros>
    <model id="Touch90CareLogEntity">
        <sql id="loadByInstances" macros="job_90log_fields">
            <body><![CDATA[
            SELECT <@touch90_fields />
              FROM TASK_TOUCH90_LOG AS attl
             WHERE (attl.company_id,attl.store_id,attl.log_date)
                IN (<#list instances as item>(${item[0]},${item[1]},'${item[2]}')<#if item_has_next>,</#if></#list>)
            ]]></body>
        </sql>
        <sql id="batchInsert">
            <body><![CDATA[
         REPLACE INTO TASK_TOUCH90_LOG
                      (company_id, store_id, log_date, add_list, add_size, update_list, update_size,tenant_id)
               VALUES (         ?,         ?,       ?,         ?,       ?,           ?,           ?,        ?)
            ]]></body>
        </sql>
    </model>
    <model id="TaskSwitchEntity">
        <sql id="queryTaskSwitch">
            <body><![CDATA[
          SELECT tcs.id AS 'id',
                 tcs.company_id AS 'companyId',
                 tcs.store_id AS 'storeId',
                 tcs.taskType AS 'taskType',
                 tcs.enbaled AS 'enabled',
                 tcs.delete_flag AS 'deleteFlag',
                 tcs.tenant_id AS 'tenantId',
                 tcs.creator AS 'creator',
                 tcs.createTime AS 'createTime',
                 tcs.editor AS 'editor',
                 tcs.editTime AS 'editTime'
            FROM TASK_CASE_SWITCH tcs
           WHERE tcs.taskType = :taskType
             AND tcs.delete_flag = 0
            ]]></body>
        </sql>
        <sql id="updateTouch90Switch">
            <body><![CDATA[
        UPDATE TASK_CASE_SWITCH
           SET enbaled = :enabled , editTime = NOW()
         WHERE taskType = 90
           AND id = :id
            ]]></body>
        </sql>
        <sql id="insertTouch90Switch">
            <body><![CDATA[
        INSERT INTO TASK_CASE_SWITCH
                    (company_id, store_id,  taskType,  enbaled, delete_flag, tenant_id, creator, createTime)
             VALUES (:companyId, -1,       :taskType, :enabled,           0, :tenantId,      -1, CURRENT_TIMESTAMP);
            ]]></body>
        </sql>
    </model>
    <macros>
        <macro id="job_carerule_fields">
            <![CDATA[
             <#macro carerule_fields>
                   tcr.task_type AS 'taskType',
                   tcr.store_id AS 'storeId',
                   tcr.company_id AS 'companyId',
                   tcr.enbaled AS 'enabled',
                   tcr.automatic AS 'automatic',
                   tcr.content AS 'content',
                   tcr.details AS 'details',
                   tcr.delete_flag AS 'deleteFlag',
                   tcr.tenant_id AS 'tenantId',
                   tcr.creator AS 'creator',
                   tcr.createTime AS 'createTime',
                   tcr.editor AS 'editor',
                   tcr.editTime AS 'editTime'
	         </#macro>
	          ]]>
        </macro>
    </macros>
    <model id="AbstractCareRuleRule">
        <sql id="loadTouch90Rules" macros="job_carerule_fields">
            <body><![CDATA[
            SELECT <@carerule_fields />
              FROM TASK_CARE_RULE tcr
             WHERE tcr.task_type = :taskType
               AND tcr.company_id = :companyId
            ]]></body>
        </sql>
        <sql id="deleteByCompany">
            <body><![CDATA[
       DELETE FROM TASK_CARE_RULE
             WHERE task_type = :taskType
               AND company_id = :companyId
               AND store_id <> -1
            ]]></body>
        </sql>
        <sql id="batchInsertOrUpdate">
            <body><![CDATA[
       REPLACE INTO TASK_CARE_RULE
                    ( company_id, store_id, task_type, automatic, tenant_id, creator, createTime, enbaled, content, details )
             VALUES (          ?,        ?,         ?,       ?,           ?,        ?,     NOW(),       ?,       ?,      ?  )
            ]]></body>
        </sql>
    </model>
</sqls>
