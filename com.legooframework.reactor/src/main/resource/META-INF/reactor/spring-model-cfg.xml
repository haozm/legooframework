<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       					   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                           http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">
    <bean id="reactorBundle" class="com.legooframework.model.core.osgi.LegooBundleFactoryBean">
        <property name="resource" value="classpath:META-INF/reactor/legoo-model-cfg.xml"/>
    </bean>
    <bean id="reactorStatementFactory" class="com.legooframework.model.core.jdbc.sqlengine.SQLStatementFactoryBean">
        <property name="patterns">
            <util:list value-type="java.lang.String">
                <value>.*[\\,/]reactor[\\,/]entity-sql-cfg.xml$</value>
            </util:list>
        </property>
    </bean>
    <bean id="reactorCacheManager" class="com.legooframework.model.core.cache.CaffeineCacheManager">
        <property name="caffeineSpecs">
            <util:map key-type="java.lang.String" value-type="java.lang.String">
                <entry key="reactorCache" value="initialCapacity=64,maximumSize=1024,expireAfterAccess=5m"/>
            </util:map>
        </property>
    </bean>
    <bean id="reactorAbsEntityAction" class="com.legooframework.model.core.base.entity.BaseEntityAction"
          abstract="true">
        <property name="statementFactory" ref="reactorStatementFactory"/>
        <property name="dataSource" ref="reactorDataSource"/>
        <property name="cacheManager" ref="reactorCacheManager"/>
    </bean>
    <bean id="reactorRetailFactAction" class="com.legooframework.model.reactor.entity.RetailFactEntityAction"
          parent="reactorAbsEntityAction"/>
    <bean id="reactorLogEntityAction" class="com.legooframework.model.reactor.entity.ReactorLogEntityAction"
          parent="reactorAbsEntityAction"/>
    <bean id="retailFactRowMapper" class="com.legooframework.model.reactor.entity.RetailFactRowMapper"
          scope="prototype"/>

    <bean id="retailFactAggItemReader" class="com.legooframework.model.reactor.entity.RetailFactAggItemReader"
          scope="step">
        <property name="sqlStatementFactory" ref="reactorStatementFactory"/>
        <property name="dataSource" ref="reactorDataSource"/>
        <property name="params" value="#{jobParameters['job.params']}"/>
    </bean>
    <bean id="retailFactAggItemProcessor" class="com.legooframework.model.reactor.entity.RetailFactAggItemProcessor">
        <constructor-arg name="storeAction" ref="covariantStoEntityAction"/>
        <constructor-arg name="templateAction" ref="covariantTemplateAction"/>
        <constructor-arg name="smsBalanceAction" ref="covariantBalanceAction"/>
        <constructor-arg name="employeeAction" ref="covariantEmpAction"/>
        <constructor-arg name="sendSmsEntityAction" ref="covariantSmsAction"/>
    </bean>
    <bean id="retailFactAggItemWriter" class="com.legooframework.model.reactor.entity.RetailFactAggItemWriter">
        <constructor-arg name="reactorLogAction" ref="reactorLogEntityAction"/>
        <constructor-arg name="sendSmsAction" ref="covariantSmsAction"/>
    </bean>
    <bean id="reactorService" class="com.legooframework.model.reactor.service.ReactorService"/>
    <batch:job id="retailSmsJob" job-repository="jobRepository">
        <batch:step id="step01">
            <batch:tasklet start-limit="1">
                <batch:chunk reader="retailFactAggItemReader"
                             processor="retailFactAggItemProcessor"
                             writer="retailFactAggItemWriter"
                             commit-interval="50"/>
            </batch:tasklet>
        </batch:step>
    </batch:job>
</beans>
